{{- if .Values.installCRDs }}
{{- $name := include "clusterpedia.name" . -}}
{{- $namespace := include "clusterpedia.namespace" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-pre-hook-config
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "2"
data:
  crds-configmaps.yaml: |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ $name }}-crds
      namespace: {{ $namespace }}
    data:
      {{ range $path, $bytes := .Files.Glob (printf "crds/*")}}
      {{ $name := base $path }}
      {{- (printf "%s: " $name) | nindent 6 }} |-
        {{- $.Files.Get $path | nindent 8 }}
      {{ end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $name }}-pre-hook"
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ $name }}
      labels:
        app.kubernetes.io/instance: {{ $name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ $name }}-pre-hook-job
      restartPolicy: Never
      containers:
      - name: pre-upgrade-hook
        image: {{ .Values.preInstallJob.preInstallContainerImage }}
        imagePullPolicy: IfNotPresent
        workingDir: /opt/config
        command:
        - /bin/sh
        - -c
        - |
          bash <<'EOF'
          set -ex
          kubectl apply --server-side -f /opt/config --force-conflicts
          EOF
        volumeMounts:
        - name: config
          mountPath: /opt/config
      volumes:
      - name: config
        configMap:
          name: {{ $name }}-pre-hook-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $name }}-pre-hook-install-crds"
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ $name }}
      labels:
        app.kubernetes.io/instance: {{ $name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ $name }}-pre-hook-job
      restartPolicy: Never
      containers:
      - name: install-crds
        image: {{ .Values.preInstallJob.preInstallContainerImage }}
        imagePullPolicy: IfNotPresent
        workingDir: /crds
        command:
        - /bin/sh
        - -c
        - |
          bash <<'EOF'
          set -ex
          kubectl apply --server-side -f /crds --force-conflicts
          EOF
        volumeMounts:
        - name: crds
          mountPath: /crds
      volumes:
      - name: crds
        configMap:
          name: {{ $name }}-crds
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $name }}-pre-hook-job
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $name }}-pre-hook-job
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
  - nonResourceURLs: ['*']
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $name }}-pre-hook-job
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $name }}-pre-hook-job
subjects:
  - kind: ServiceAccount
    name: {{ $name }}-pre-hook-job
    namespace: {{ $namespace }}
---
{{- end -}}
